# Networking optimizations

# Sendfile copies data between one FD and other from within the kernel.
# More efficient than read() + write(), since the requires transferring data to and from the user space.
sendfile        on;

# Tcp_nopush causes nginx to attempt to send its HTTP response head in one packet,
# instead of using partial frames. This is useful for prepending headers before calling sendfile,
# or for throughput optimization.
tcp_nopush     off;

# don't buffer data-sends (disable Nagle algorithm). Good for sending frequent small bursts of data in real time.
tcp_nodelay on;

# Number of requests a client can make over the keep-alive connection.  number of keep alive requests per connection, does not affect SPDY
keepalive_requests 512;

# Timeout for keep-alive connections. Server will close connections after this time.
keepalive_timeout  300 300;

# allow the server to close the connection after a client stops responding. Frees up socket-associated memory.
reset_timedout_connection on;


#Close slow connection
client_body_timeout   5s;


# Try not to keep conns around too long
lingering_time 5s;
lingering_timeout 1s;
client_header_timeout 5s;
send_timeout 9s;

include /etc/nginx/client-size-protection.conf;

