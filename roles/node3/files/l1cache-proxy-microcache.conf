proxy_http_version 1.1;
proxy_headers_hash_bucket_size 128;
proxy_set_header Connection "";
proxy_set_header        Host              $host;
proxy_set_header        X-Forwarded-By    $server_addr:$server_port;
proxy_set_header        X-Forwarded-For   $proxy_add_x_forwarded_for;

proxy_redirect off;

proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;
proxy_cache_lock on;
proxy_ignore_headers "Expires" "Cache-Control" "Set-Cookie";
proxy_cache_valid 404 1m;
proxy_cache_revalidate on;

### proxy-timeouts ###
proxy_connect_timeout   60;
proxy_send_timeout      60;
proxy_read_timeout      60;

### proxy-buffers ###
proxy_buffering         on;
proxy_buffer_size       8k;
proxy_buffers           256 8k;
proxy_busy_buffers_size    64k;
proxy_temp_file_write_size 64k;
proxy_temp_path         /dev/shm 1 2;

# 2: Use htmlcache as the zone for caching.
proxy_cache private-cache;

# 3: Bypass requests that correspond to .pagespeed. resources
# or clients that do not support gzip etc.
#proxy_cache_bypass $bypass_cache;

# 4: Use the redefined proxy_cache_key and make sure the /purge/
# block uses the same key.
proxy_cache_key $cookie_jsessionid$compress$keycache;

# 7: Add a header for identifying cache hits/misses/expires. This is
# for debugging purposes only and can be commented out in production.
#add_header X-Cache $upstream_cache_status;
more_set_headers "X-Cache: $upstream_cache_status";

proxy_hide_header Vary;
add_header Vary $vary;
